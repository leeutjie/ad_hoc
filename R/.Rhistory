rmarkdown::render(option_pricing_exercises.Rmd)
list.files()
rmarkdown::render("option_pricing_exercises.Rmd")
update.packages(ask = F)
update.packages(ask = F)
update.packages(ask = F)
install.packages("waldo")
install.packages("waldo")
install.packages("waldo")
install.packages("waldo")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
pacman::p_ver(xfun)
rmarkdown::render("option_pricing_exercises.Rmd")
rmarkdown::render("option_pricing_exercises.Rmd")
rmarkdown::render("option_pricing_exercises.Rmd")
rmarkdown::render("option_pricing_exercises.Rmd")
rmarkdown::render("option_pricing_exercises.Rmd")
rmarkdown::render("option_pricing_exercises.Rmd")
rmarkdown::render("option_pricing_exercises.Rmd")
rmarkdown::render("option_pricing_exercises.Rmd")
rmarkdown::render("option_pricing_exercises.Rmd")
rmarkdown::render("option_pricing_exercises.Rmd")
rmarkdown::render("test.Rmd")
rmarkdown::render("test.Rmd")
rmarkdown::render("test.Rmd")
rmarkdown::render("option_pricing_excercises.Rmd")
list.files()
rmarkdown::render("option_pricing_exercises.Rmd")
rmarkdown::render("option_pricing_exercises.Rmd")
library(pimR)
install.packges("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
file.edit(file.path("~", ".Rprofile"))
install.packages("rlang")
install.packages("rlang")
library("pimT")
library("pimR")
knitr::opts_chunk$set(echo = TRUE)
price_euro_option(
spot = 60,
strike = 65,
rf_rate = 0.08,
ttmy = 0.25,
vol = 0.3,
type = 'c'
)
knitr::opts_chunk$set(echo = TRUE)
price_euro_option_ <- function(S, X, r, sigma, `T`) {
d1 <- (log(S/X) + ((r + sigma^2)/2)*`T`) / sigma * sqrt(`T`)
d2 <- d1 - sigma * sqrt(`T`)
}
# alternative naming convention that could make more sense
price_euro_option <- function(spot, strike, rf_rate, vol, ttmy, type = "c") {
d1 <- log(spot/strike) + (((rf_rate + vol^2)/2)*ttmy) / vol*sqrt(ttmy)
d2 <- d1 - vol * sqrt(ttmy)
if (type == "c"){
spot*pnorm(d1) - strike*exp(-rf_rate*ttmy)*pnorm(d2)
} else if (type == "p"){
strike*exp(-rf_rate*ttmy)pnorm(-d2) - spot*pnorm(-d1)
knitr::opts_chunk$set(echo = TRUE)
price_euro_option_ <- function(S, X, r, sigma, `T`) {
d1 <- (log(S/X) + ((r + sigma^2)/2)*`T`) / sigma * sqrt(`T`)
d2 <- d1 - sigma * sqrt(`T`)
}
# alternative naming convention that could make more sense
price_euro_option <- function(spot, strike, rf_rate, vol, ttmy, type = "c") {
d1 <- log(spot/strike) + (((rf_rate + vol^2)/2)*ttmy) / vol*sqrt(ttmy)
d2 <- d1 - vol * sqrt(ttmy)
if (type == "c"){
spot*pnorm(d1) - strike*exp(-rf_rate*ttmy)*pnorm(d2)
} else if (type == "p"){
strike*exp(-rf_rate*ttmy)*pnorm(-d2) - spot*pnorm(-d1)
}
}
price_euro_option(
spot = 60,
strike = 65,
rf_rate = 0.08,
ttmy = 0.25,
vol = 0.3,
type = "c"
)
if (type == "c"){
spot*pnorm(d1) - strike*exp(-rf_rate*ttmy)*pnorm(d2)
} else if (type == "p"){
strike*exp(-rf_rate*ttmy)*pnorm(-d2) - spot*pnorm(-d1)
}
# alternative naming convention that could make more sense
price_euro_option <- function(spot, strike, rf_rate, vol, ttmy, type = "c") {
d1 <- (log(spot/strike) + (rf_rate + vol^2/2)*ttmy) / vol*sqrt(ttmy)
d2 <- d1 - vol*sqrt(ttmy)
if (type == "c"){
spot*pnorm(d1) - strike*exp(-rf_rate*ttmy)*pnorm(d2)
} else if (type == "p"){
strike*exp(-rf_rate*ttmy)*pnorm(-d2) - spot*pnorm(-d1)
}
}
price_euro_option(
spot = 60,
strike = 65,
rf_rate = 0.08,
ttmy = 0.25,
vol = 0.3,
type = "c"
)
}
knitr::opts_chunk$set(echo = TRUE)
price_euro_option_ <- function(S, X, r, sigma, `T`) {
d1 <- (log(S/X) + ((r + sigma^2)/2)*`T`) / sigma * sqrt(`T`)
d2 <- d1 - sigma * sqrt(`T`)
}
# alternative naming convention that could make more sense
price_euro_option <- function(spot, strike, rf_rate, vol, ttmy, type = "c") {
d1 <- (log(spot/strike) + (rf_rate + vol^2/2)*ttmy) / vol*sqrt(ttmy)
d2 <- d1 - vol*sqrt(ttmy)
if (type == "c"){
spot*pnorm(d1) - strike*exp(-rf_rate*ttmy)*pnorm(d2)
} else if (type == "p"){
strike*exp(-rf_rate*ttmy)*pnorm(-d2) - spot*pnorm(-d1)
}
}
price_euro_option(
spot = 60,
strike = 65,
rf_rate = 0.08,
ttmy = 0.25,
vol = 0.3,
type = "c"
)
# if (type == "c"){
#
#   spot*pnorm(d1) - strike*exp(-rf_rate*ttmy)*pnorm(d2)
#
# } else if (type == "p"){
#
#   strike*exp(-rf_rate*ttmy)*pnorm(-d2) - spot*pnorm(-d1)
#
# }
return(d1)
price_euro_option_ <- function(S, X, r, sigma, `T`) {
d1 <- (log(S/X) + ((r + sigma^2)/2)*`T`) / sigma * sqrt(`T`)
d2 <- d1 - sigma * sqrt(`T`)
}
# alternative naming convention that could make more sense
price_euro_option <- function(spot, strike, rf_rate, vol, ttmy, type = "c") {
d1 <- (log(spot/strike) + (rf_rate + vol^2/2)*ttmy) / vol*sqrt(ttmy)
d2 <- d1 - vol*sqrt(ttmy)
# if (type == "c"){
#
#   spot*pnorm(d1) - strike*exp(-rf_rate*ttmy)*pnorm(d2)
#
# } else if (type == "p"){
#
#   strike*exp(-rf_rate*ttmy)*pnorm(-d2) - spot*pnorm(-d1)
#
# }
return(d1)
}
price_euro_option(
spot = 60,
strike = 65,
rf_rate = 0.08,
ttmy = 0.25,
vol = 0.3,
type = "c"
)
spot = 60
strike = 65
rf_rate = 0.08
ttmy = 0.25
vol = 0.3
type = "c"
log(spot/strike)
(log(spot/strike) + (rf_rate + vol^2/2)*ttmy) / vol*sqrt(ttmy)
ttmy
vol
rf_rate
vol^2/2
rf_rate + vol^2/2
(rf_rate + vol^2/2)*ttmy
(log(spot/strike) + (rf_rate + vol^2/2)*ttmy)
vol*sqrt(ttmy)
(log(spot/strike) + (rf_rate + vol^2/2)*ttmy) / vol*sqrt(ttmy)
d1 <- (log(spot/strike) + (rf_rate + vol^2/2)*ttmy)/(vol*sqrt(ttmy))
d1
d1 - vol*sqrt(ttmy)
spot*pnorm(d1) - strike*exp(-rf_rate*ttmy)*pnorm(d2)
price_euro_option_ <- function(S, X, r, sigma, `T`) {
d1 <- (log(S/X) + ((r + sigma^2)/2)*`T`) / sigma * sqrt(`T`)
d2 <- d1 - sigma * sqrt(`T`)
}
# alternative naming convention that could make more sense
price_euro_option <- function(spot, strike, rf_rate, vol, ttmy, type = "c") {
d1 <- (log(spot/strike) + (rf_rate + vol^2/2)*ttmy)/(vol*sqrt(ttmy))
d2 <- d1 - vol*sqrt(ttmy)
if (type == "c"){
spot*pnorm(d1) - strike*exp(-rf_rate*ttmy)*pnorm(d2)
} else if (type == "p"){
strike*exp(-rf_rate*ttmy)*pnorm(-d2) - spot*pnorm(-d1)
}
return(d1)
}
price_euro_option(
spot = 60,
strike = 65,
rf_rate = 0.08,
ttmy = 0.25,
vol = 0.3,
type = "c"
)
}
price_euro_option_ <- function(S, X, r, sigma, `T`) {
d1 <- (log(S/X) + ((r + sigma^2)/2)*`T`) / sigma * sqrt(`T`)
d2 <- d1 - sigma * sqrt(`T`)
}
# alternative naming convention that could make more sense
price_euro_option <- function(spot, strike, rf_rate, vol, ttmy, type = "c") {
d1 <- (log(spot/strike) + (rf_rate + vol^2/2)*ttmy)/(vol*sqrt(ttmy))
d2 <- d1 - vol*sqrt(ttmy)
if (type == "c"){
spot*pnorm(d1) - strike*exp(-rf_rate*ttmy)*pnorm(d2)
} else if (type == "p"){
strike*exp(-rf_rate*ttmy)*pnorm(-d2) - spot*pnorm(-d1)
}
}
price_euro_option(
spot = 60,
strike = 65,
rf_rate = 0.08,
ttmy = 0.25,
vol = 0.3,
type = "c"
)
price_euro_option(
spot = 60,
strike = 65,
rf_rate = 0.08,
ttmy = 0.25,
vol = 0.3,
type = "p"
)
if (type == "c"){
spot*pnorm(d1) - strike*exp(-rf_rate*ttmy)*pnorm(d2)
} else if (type == "p"){
strike*exp(-rf_rate*ttmy)*pnorm(-d2) - spot*pnorm(-d1)
}
price_euro_option_ <- function(S, X, r, sigma, `T`) {
d1 <- (log(S/X) + ((r + sigma^2)/2)*`T`) / sigma * sqrt(`T`)
d2 <- d1 - sigma * sqrt(`T`)
}
# alternative naming convention that could make more sense
price_euro_option <- function(spot, strike, rf_rate, vol, ttmy, type = "c") {
d1 <- (log(spot/strike) + (rf_rate + vol^2/2)*ttmy)/(vol*sqrt(ttmy))
d2 <- d1 - vol*sqrt(ttmy)
if (type == "c"){
spot*pnorm(d1) - strike*exp(-rf_rate*ttmy)*pnorm(d2)
} else if (type == "p"){
strike*exp(-rf_rate*ttmy)*pnorm(-d2) - spot*pnorm(-d1)
}
}
price_euro_option(
spot = 60,
strike = 65,
rf_rate = 0.08,
ttmy = 0.25,
vol = 0.3,
type = "p"
)
price_euro_option(
spot = 60,
strike = 65,
rf_rate = 0.08,
ttmy = 0.25,
vol = 0.3,
)
log(spot/strike)
log(spot/strike)
d1
d1 - vol*sqrt(ttmy)
d1 - vol*sqrt(ttmy)
d1
rmarkdown::render("option_pricing_exercises.Rm,d")
rmarkdown::render("option_pricing_exercises.Rmd")
